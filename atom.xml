<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>stfnt</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-14T12:35:38.881Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>stfnt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>duilib阅读笔记</title>
    <link href="http://yoursite.com/2018/03/14/DuiLib%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/03/14/DuiLib阅读笔记/</id>
    <published>2018-03-14T12:39:51.097Z</published>
    <updated>2018-03-14T12:35:38.881Z</updated>
    
    <content type="html"><![CDATA[<p>之前读过一次 好多忘记了 mark一下</p><p>阅读的时候 尽量去理解其思想，其优秀的设计 和其逻辑实现</p><p>地址：<a href="https://github.com/duilib/duilib" target="_blank" rel="noopener">https://github.com/duilib/duilib</a></p><p>DuiLib 是windows下一个出色的皮肤库，通过解析xml生成对应的布局，类似于android的xml布局</p><p>DuiLib的控件都是自绘的，不是一个窗口的模式，以前的windows mfc开发的控件窗口是可以用vs工具spy++捕获的</p><p>可以先看下目录结构</p><p><img src="core.png" alt="core"></p><p>由所见即所得可知:</p><p>UIBase.h   基本UI</p><p>UIContainer   UI装配器</p><p>UIControl      UI控件</p><p>UIDlgBuilder  对话框构造</p><p>UIManager    窗口管理，接管整个app的窗体生命周期</p><p>UIMarkup      xml解析辅助</p><p>UIRender      UI渲染，预加载图片，双缓冲绘制图片等</p><p>可以看出整个项目的类命名是非常清晰的，都以UI开头，所见即所得，这是非常值得学习的</p><p>DuilLib其中提供了五种布局</p><p><img src="Layout.png" alt="Layout"></p><p>所见即所得，可以看出分别是子布局，水平布局，Tab布局，Title布局，垂直布局</p><p>其中以水平布局 和垂直布局最为常用</p><p>先看xml的加载</p><p>常规xml通常是这样<img src="Xml.png" alt="Xml"></p><p>xml通常可以分为 </p><p>&lt;?  ?&gt;   </p><!--  -->  注释<br><br><name id="1"><br><br><name id="2"><br><br>​    <key></key><br><br></name><br><br>所以需要解析”&lt;?”，<!--,<name />  <name> </name> 这些标签<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( *pstrText == _T(<span class="string">'!'</span>) || *pstrText == _T(<span class="string">'?'</span>) ) &#123; <span class="comment">//解析&lt;? 和&lt;! 标签</span></span><br><span class="line">            TCHAR ch = *pstrText;</span><br><span class="line">            <span class="keyword">if</span>( *pstrText == _T(<span class="string">'!'</span>) ) ch = _T(<span class="string">'-'</span>);</span><br><span class="line">            <span class="keyword">while</span>( *pstrText != _T(<span class="string">'\0'</span>) &amp;&amp; !(*pstrText == ch &amp;&amp; *(pstrText + <span class="number">1</span>) == _T(<span class="string">'&gt;'</span>)) ) pstrText = ::CharNext(pstrText);</span><br><span class="line">            <span class="keyword">if</span>( *pstrText != _T(<span class="string">'\0'</span>) ) pstrText += <span class="number">2</span>;</span><br><span class="line">            _SkipWhitespace(pstrText);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TCHAR m_szErrorMsg[<span class="number">100</span>];</span><br><span class="line">TCHAR m_szErrorXML[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">bool</span> m_bPreserveWhitespace;</span><br><span class="line">ULONG m_nReservedElements;</span><br></pre></td></tr></table></figure><p>private:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> _Parse();</span><br><span class="line"><span class="keyword">bool</span> _Parse(LPTSTR&amp; pstrText, ULONG iParent);</span><br><span class="line">XMLELEMENT* _ReserveElement();</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _SkipWhitespace(LPTSTR&amp; pstr) <span class="keyword">const</span>;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _SkipWhitespace(LPCTSTR&amp; pstr) <span class="keyword">const</span>;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _SkipIdentifier(LPTSTR&amp; pstr) <span class="keyword">const</span>;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> _SkipIdentifier(LPCTSTR&amp; pstr) <span class="keyword">const</span>;</span><br><span class="line"><span class="keyword">bool</span> _ParseData(LPTSTR&amp; pstrText, LPTSTR&amp; pstrData, <span class="keyword">char</span> cEnd);</span><br><span class="line"><span class="keyword">void</span> _ParseMetaChar(LPTSTR&amp; pstrText, LPTSTR&amp; pstrDest);</span><br><span class="line"><span class="keyword">bool</span> _ParseAttributes(LPTSTR&amp; pstrText);  <span class="comment">//解析属性</span></span><br><span class="line"><span class="keyword">bool</span> _Failed(LPCTSTR pstrError, LPCTSTR pstrLocation = <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></p><p>其中pstrText 为”&lt;?xml version=\”1.0\” encoding=\”utf-8\”?&gt;\r\n</p><p>&lt;Window size=\”800,572\” sizebox=\”4,4,6,6\”\ “……………这样</p><p>因为这里可能包含\t,\r,\n，空格都是无效的数据</p><p>所以这里的inline void _SkipWhitespace(LPTSTR&amp; pstr) const;就写的很好</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CMarkup::_SkipWhitespace(LPCTSTR&amp; pstr) <span class="keyword">const</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>( *pstr &gt; _T(<span class="string">'\0'</span>) &amp;&amp; *pstr &lt;= _T(<span class="string">' '</span>) ) pstr = ::CharNext(pstr);</span><br><span class="line"><span class="comment">// 因为\r,\n,\t 都小于' '，所以这里面顺便把\t,\r,\n都跳过了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml的解析</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HorizontalLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Container</span> <span class="attr">width</span>=<span class="string">"22"</span> <span class="attr">height</span>=<span class="string">"22"</span> <span class="attr">bkimage</span>=<span class="string">"file='icon.png' source='0,0,16,16' dest='5,4,21,20' "</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Text</span> <span class="attr">text</span>=<span class="string">"360安全卫士7.3"</span> <span class="attr">pos</span>=<span class="string">"22, 5, 200, 24"</span> <span class="attr">float</span>=<span class="string">"true"</span> <span class="attr">textcolor</span>=<span class="string">"#FF447AA1"</span> <span class="attr">font</span>=<span class="string">"0"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">HorizontalLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如同html的解析那样会生成一个document数组，这里也会生成一个document数组，父节点是HorizontalLayout</p><p>子节点是Container和Text，这里面包含了两个操作，解析属性如width=”22”</p><p>解析子节点</p><p>总结：xmlParser先是把整个xml载入内存，大小约为几kb，这是非常小的</p><p>之后解析出各个属性，并把name加上’\0’截断，生成document类似的节点数组，并通过tagXMLELEMENT保存，整个xml是一直在内存的，只需要获取到它的开始位置和结束位置就可以了</p><p>如 “……………………..pos\0\”22,5,200,24\0  float\0\”true\0…………………….”</p><p>这里的pos位置是iStart177，因为字符串后面有\0，所以直接从xml+iStart开始所获取到的便是属性值pos了</p><pre><code>typedef struct tagXMLELEMENT{    ULONG iStart;    ULONG iChild;    ULONG iNext;    ULONG iParent;    ULONG iData;} XMLELEMENT;</code></pre><p>xml解析主要思路还是 递归解析子节点和属性值，去掉不合理的数据和错误处理</p><p>其中对可兼容性也做的很好，用户可以自定义插件继承于baseControl，参见</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// User-supplied control factory</span></span><br><span class="line">    <span class="keyword">if</span>( pControl == <span class="literal">NULL</span> ) &#123;</span><br><span class="line">        CDuiPtrArray* pPlugins = CPaintManagerUI::GetPlugins();</span><br><span class="line">        LPCREATECONTROL lpCreateControl = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pPlugins-&gt;GetSize(); ++i ) &#123;</span><br><span class="line">            lpCreateControl = (LPCREATECONTROL)pPlugins-&gt;GetAt(i);</span><br><span class="line">            <span class="keyword">if</span>( lpCreateControl != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">                pControl = lpCreateControl(pstrClass);</span><br><span class="line">                <span class="keyword">if</span>( pControl != <span class="literal">NULL</span> ) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( pControl == <span class="literal">NULL</span> &amp;&amp; m_pCallback != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">        pControl = m_pCallback-&gt;CreateControl(pstrClass);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//插件的可重写性 感觉设计得非常好</span></span><br></pre></td></tr></table></figure><p>再看UIManager是怎么接管windows消息机制的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CPaintManagerUI::SetInstance(hInstance);</span><br><span class="line">CPaintManagerUI::SetResourcePath(CPaintManagerUI::GetInstancePath() + _T(<span class="string">"skin"</span>));</span><br><span class="line">CPaintManagerUI::SetResourceZip(_T(<span class="string">"360SafeRes.zip"</span>));</span><br><span class="line">CPaintManagerUI::MessageLoop();</span><br></pre></td></tr></table></figure><p>这些都是static函数，用于初始化消息接管，可见资源的加载可以变成一个.zip，这是非常好的设计</p><p>步入MessageLoop可得:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MSG msg = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span>( ::GetMessage(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>) ) &#123;</span><br><span class="line">    <span class="keyword">if</span>( !CPaintManagerUI::TranslateMessage(&amp;msg) ) &#123;</span><br><span class="line">        ::TranslateMessage(&amp;msg);</span><br><span class="line">::DispatchMessage(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在windows消息处理之前先执行了CPaintManagerUI::TranslateMessage(&amp;msg)</p><p>步入CPaintManagerUI::TranslateMessage(&amp;msg)得:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_aPreMessages.GetSize(); i++ ) &#123;</span><br><span class="line"><span class="keyword">int</span> size = m_aPreMessages.GetSize();</span><br><span class="line">CPaintManagerUI* pT = <span class="keyword">static_cast</span>&lt;CPaintManagerUI*&gt;(m_aPreMessages[i]);</span><br><span class="line"><span class="keyword">if</span>(pMsg-&gt;hwnd == pT-&gt;GetPaintWindow())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pT-&gt;TranslateAccelerator(pMsg))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( pT-&gt;PreMessageHandler(pMsg-&gt;message, pMsg-&gt;wParam, pMsg-&gt;lParam, lRes) ) </span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//这里面有一个消息预处理，那么m_aPreMessages又是怎么来的呢?</span></span><br></pre></td></tr></table></figure><p>搜索发现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CPaintManagerUI::Init(HWND hWnd, LPCTSTR pstrName)｛</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( m_hWndPaint != hWnd ) &#123;</span><br><span class="line">m_hWndPaint = hWnd;</span><br><span class="line">m_hDcPaint = ::GetDC(hWnd);</span><br><span class="line">m_aPreMessages.Add(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">｝<span class="comment">// 在这里将m_PaintManager注册为了预处理消息列表</span></span><br></pre></td></tr></table></figure><p>之后调用了</p><p><code>bool CPaintManagerUI::PreMessageHandler(UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT&amp; /*lRes*/)</code></p><p>步入PerMessageHandler：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m_aPreMessageFilters.GetSize(); i++ ) &#123;</span><br><span class="line">    <span class="keyword">bool</span> bHandled = <span class="literal">false</span>;</span><br><span class="line">    LRESULT lResult = <span class="keyword">static_cast</span>&lt;IMessageFilterUI*&gt;(m_aPreMessageFilters[i])-&gt;MessageHandler(uMsg, wParam, lParam, bHandled);</span><br><span class="line">    <span class="keyword">if</span>( bHandled ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//这里又有了一个m_aPreMessageFilters消息过滤处理列表，分别调用自己的MessageHandler处理机制，可见常见的消息分发代码，由于是if( bHandled ) &#123;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;所以这里的消息处理很快，并不用遍历所有的，</span><br><span class="line">    自己可以扩展接口IMessageFilterUI实现自己的消息处理，之后通过addPreMessageFilters实现</span><br></pre></td></tr></table></figure><p>其中还有控件级别的消息处理，因为控件不是窗体，所以要实现消息列表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> EVENTTYPE_UI</span><br><span class="line">&#123;</span><br><span class="line">UIEVENT__FIRST = <span class="number">1</span>,</span><br><span class="line">UIEVENT__KEYBEGIN,</span><br><span class="line">UIEVENT_KEYDOWN,</span><br><span class="line">UIEVENT_KEYUP,</span><br><span class="line">UIEVENT_CHAR,</span><br><span class="line">UIEVENT_SYSKEY,</span><br><span class="line">UIEVENT__KEYEND,</span><br><span class="line">UIEVENT__MOUSEBEGIN,</span><br><span class="line">UIEVENT_MOUSEMOVE,</span><br><span class="line">UIEVENT_MOUSELEAVE,</span><br><span class="line">UIEVENT_MOUSEENTER,</span><br><span class="line">UIEVENT_MOUSEHOVER,</span><br><span class="line">UIEVENT_BUTTONDOWN,</span><br><span class="line">UIEVENT_BUTTONUP,</span><br><span class="line">UIEVENT_RBUTTONDOWN,</span><br><span class="line">UIEVENT_DBLCLICK,</span><br><span class="line">UIEVENT_CONTEXTMENU,</span><br><span class="line">UIEVENT_SCROLLWHEEL,</span><br><span class="line">UIEVENT__MOUSEEND,</span><br><span class="line">UIEVENT_KILLFOCUS,</span><br><span class="line">UIEVENT_SETFOCUS,</span><br><span class="line">UIEVENT_WINDOWSIZE,</span><br><span class="line">UIEVENT_SETCURSOR,</span><br><span class="line">UIEVENT_TIMER,</span><br><span class="line">UIEVENT_NOTIFY,</span><br><span class="line">UIEVENT_COMMAND,</span><br><span class="line">UIEVENT__LAST,</span><br><span class="line">&#125;;<span class="comment">//可见这里的消息是非常齐全的</span></span><br></pre></td></tr></table></figure><p>控件级的消息由CnotifyPump实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DUILIB_API</span> <span class="title">CNotifyPump</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">AddVirtualWnd</span><span class="params">(CDuiString strName,CNotifyPump* pObject)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">RemoveVirtualWnd</span><span class="params">(CDuiString strName)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">NotifyPump</span><span class="params">(TNotifyUI&amp; msg)</span></span>; <span class="comment">// 在这里将消息分发给各个控件</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">LoopDispatch</span><span class="params">(TNotifyUI&amp; msg)</span></span>;</span><br><span class="line">DUI_DECLARE_MESSAGE_MAP()</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">CDuiStringPtrMap m_VirtualWndMap;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CNotifyPump::NotifyPump(TNotifyUI&amp; msg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">///遍历虚拟窗口</span></span><br><span class="line"><span class="keyword">if</span>( !msg.sVirtualWnd.IsEmpty() )&#123;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> i = <span class="number">0</span>; i&lt; m_VirtualWndMap.GetSize(); i++ ) &#123;</span><br><span class="line"><span class="keyword">if</span>( LPCTSTR key = m_VirtualWndMap.GetAt(i) ) &#123;</span><br><span class="line"><span class="keyword">if</span>( _tcsicmp(key, msg.sVirtualWnd.GetData()) == <span class="number">0</span> )&#123;</span><br><span class="line">CNotifyPump* pObject = <span class="keyword">static_cast</span>&lt;CNotifyPump*&gt;(m_VirtualWndMap.Find(key, <span class="literal">false</span>));</span><br><span class="line"><span class="keyword">if</span>( pObject &amp;&amp; pObject-&gt;LoopDispatch(msg) )</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">//遍历主窗口</span></span><br><span class="line">LoopDispatch( msg );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里的消息分发写的特别好，先把消息分发到所有的虚拟窗口列表，之后再分别调用各个控件的消息处理函数，如果成功处理就返回，假如所有的控件都对这个消息不感兴趣的话，就访问主窗口是否感兴趣</span></span><br></pre></td></tr></table></figure><p>消息处理流程大概是这样，接下来看下渲染的:</p><p>见<code>bool CControlUI::DoPaint(HDC hDC, const RECT&amp; rcPaint, CControlUI* pStopControl)</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> CRenderClip roundClip;</span><br><span class="line">CRenderClip::GenerateRoundClip(hDC, m_rcPaint,  m_rcItem, m_cxyBorderRound.cx, m_cxyBorderRound.cy, roundClip);</span><br><span class="line">    PaintBkColor(hDC);</span><br><span class="line">    PaintBkImage(hDC);</span><br><span class="line">    PaintStatusImage(hDC);</span><br><span class="line">    PaintText(hDC);</span><br><span class="line">    PaintBorder(hDC);</span><br><span class="line">    <span class="comment">// 绘制循序：背景颜色-&gt;背景图-&gt;状态图-&gt;文本-&gt;边框</span></span><br><span class="line"><span class="comment">// 这里也是感觉逻辑很清晰，先绘制背景颜色，再绘制背景图，再绘制状态图,如control处于hover状态，pushed状态，getFocus状态，killFocus状态，再绘制文字和绘制边框</span></span><br></pre></td></tr></table></figure><p>感觉其中有很多思想和设计值得学习的，完结</p>--></name>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前读过一次 好多忘记了 mark一下&lt;/p&gt;
&lt;p&gt;阅读的时候 尽量去理解其思想，其优秀的设计 和其逻辑实现&lt;/p&gt;
&lt;p&gt;地址：&lt;a href=&quot;https://github.com/duilib/duilib&quot; target=&quot;_blank&quot; rel=&quot;noopene
      
    
    </summary>
    
      <category term="github开源阅读笔记" scheme="http://yoursite.com/categories/github%E5%BC%80%E6%BA%90%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>dex脱壳和某个直播app逆向浅谈</title>
    <link href="http://yoursite.com/2018/03/14/dex%20%E8%84%B1%E5%A3%B3mark/"/>
    <id>http://yoursite.com/2018/03/14/dex 脱壳mark/</id>
    <published>2018-03-14T12:39:51.097Z</published>
    <updated>2018-03-14T12:34:32.963Z</updated>
    
    <content type="html"><![CDATA[<p>dex 脱壳mark</p><p>xposed hool loadDexFile 函数???</p><p>IDA ？？？</p><p>脱壳神器drizzleDumper工具</p><p><a href="https://github.com/DrizzleRisk/drizzleDumper" target="_blank" rel="noopener">https://github.com/DrizzleRisk/drizzleDumper</a></p><p>root设备之后，通过ptrace附加需要脱壳的apk进程，然后在脱壳的apk进程的内存中进行dex文件的特征搜索，当搜索到dex文件时，进行dex文件的内存dump。</p><p><a href="http://www.wjdiankong.cn/android%E8%84%B1%E5%A3%B3%E5%9C%A3%E6%88%98%E4%B9%8B-%E8%84%B1%E6%8E%89360%E5%8A%A0%E5%9B%BA%E5%A3%B3%E7%A0%B4%E8%A7%A3%E7%BA%A6%E5%8F%8B%E7%A5%9E%E5%99%A8%E7%9A%84%E9%92%BB%E7%9F%B3%E5%85%85/" target="_blank" rel="noopener">http://www.wjdiankong.cn/android%E8%84%B1%E5%A3%B3%E5%9C%A3%E6%88%98%E4%B9%8B-%E8%84%B1%E6%8E%89360%E5%8A%A0%E5%9B%BA%E5%A3%B3%E7%A0%B4%E8%A7%A3%E7%BA%A6%E5%8F%8B%E7%A5%9E%E5%99%A8%E7%9A%84%E9%92%BB%E7%9F%B3%E5%85%85/</a></p><p>蜜疯直播 脱壳mark ???<br>想看下钻石可不可以伪造，拉进jeb发现用了360加固</p><p>网上查找了脱壳教程</p><p>用了<a href="https://www.52pojie.cn/thread-685918-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-685918-1-1.html</a>  ????</p><p>这样就脱壳了，我去??????????????</p><p><a href="https://www.bejson.com/convert/unicode_chinese/" target="_blank" rel="noopener">https://www.bejson.com/convert/unicode_chinese/</a>   json的/u可以在线看出</p><p>解压缩通常有__MACOSX文件</p><p>这是mac目录下的缩略图文件，是处于隐藏属性的，方便于mac查看</p><p>但是在windows环境下?who  care？？？ nobody know it. just delete it.</p><p>sessionId  通常32个hex  32*4 = 128位  好像是非常非常少的情况下会重复</p><p>生成随机序列可以这样？？？</p><p>映射8192个字节buf  byte []buf =new byte[8192]；end=1024;s</p><p>之后不断地调用 hash.update(buf,0,end); end++;</p><p>由于classLoader是360classloader，所以Xposed hook的时候要在hook  getApplication，将360classLoader保存下来</p><p>在导出的dex里面发现用了小米推送和jPush，其中的游戏接口也非常好，用了cocos 基于lua开发的</p><p>lua游戏以一个压缩包组成，当用户需要的时候，就从服务器下载，</p><p>其中先通过url获取游戏列表，假如游戏资源存在的时候，直接加载，不然从url下载加载</p><p>本地修改了密钻，但是提交到服务器还是返回了错误代码-4005，status 0为正常，所有的错误代码都小于0，</p><p>对于这种服务器做了校验的，感觉很难修改， 过不了服务器校验</p><p>同时 尝试 获取其发送消息的http请求的时候，在网页版居然抓不到包？？？？</p><p>浏览器页面的？？？？fildder为什么抓不到包？？？？奇怪</p><p>下载接口，感觉写的好，onDownLoadStart onDownloadFinish onDownloadProcess onDownloadException<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dreamwin.download;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DownloadListenner</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleDelete</span><span class="params">(String arg1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleException</span><span class="params">(Exception arg1, String arg2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleFinish</span><span class="params">(String arg1)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleProcess</span><span class="params">(<span class="keyword">long</span> arg1, <span class="keyword">long</span> arg2, String arg3)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">handleStatus</span><span class="params">(String arg1, <span class="keyword">int</span> arg2)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GameMessage</span> <span class="keyword">extends</span> <span class="title">IQ</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String body;</span><br><span class="line"><span class="keyword">private</span> String elementName;</span><br><span class="line"><span class="keyword">private</span> String namespace;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;xml  namespace=\""</span>+namespace +<span class="string">"&lt;/xml&gt;"</span>+</span><br><span class="line">            <span class="string">"&lt;event  name=\""</span>+elementName+<span class="string">"\"&gt;"</span>+</span><br><span class="line">            body+</span><br><span class="line">            +<span class="string">"&lt;/event&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    StringBuilder v0 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        v0.append(<span class="string">"&lt;"</span>).append(<span class="keyword">this</span>.getElementName()).append(<span class="string">" xmlns=\""</span>).append(<span class="keyword">this</span>.getNamespace()).append(<span class="string">"\"&gt;"</span>).append(<span class="keyword">this</span>.getBody()).append(<span class="string">"&lt;/"</span>).append(<span class="keyword">this</span>.getElementName()).append(<span class="string">"&gt;"</span>);</span><br><span class="line">        <span class="keyword">return</span> v0.toString();</span><br><span class="line">&#125;  <span class="comment">// 定义了游戏信息</span></span><br><span class="line">将bean转为了xml，或者json，感觉设计的很好</span><br></pre></td></tr></table></figure><p>XMPP（Extensible Messageing and Presence Protocol：可扩展消息与存在协议）是目前主流的四种IM（IM：instant messaging,即时消息）协议之一，其他三种分别为：即时信息和空间协议(IMPP)、空间和即时信息协议(PRIM)、针对即时通讯和空间平衡扩充的进程开始协议SIP(SIMPLE)。</p><p>xmpp login 写的非常好???</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String account,String password)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(getConnection()==<span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        getConnection().login(account,password);</span><br><span class="line">        <span class="comment">//更改在线状态</span></span><br><span class="line">        Presence presence = <span class="keyword">new</span> Presence (Presence.Type.available);</span><br><span class="line">        getCOnnection().sendPacket(persence);</span><br><span class="line">        <span class="comment">// 添加连接监听</span></span><br><span class="line">        connectionListener = <span class="keyword">new</span> TaxiConnectionListener();</span><br><span class="line">        getConnection().addConnectionListener(connectionListener);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(XMPPException xe)&#123;</span><br><span class="line">        xe.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">regist</span><span class="params">(String account, String password)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="string">"0"</span>;  </span><br><span class="line">        Registration reg = <span class="keyword">new</span> Registration();  </span><br><span class="line">        reg.setType(IQ.Type.SET);  </span><br><span class="line">        reg.setTo(getConnection().getServiceName());  </span><br><span class="line">        <span class="comment">// 注意这里createAccount注册时，参数是UserName，不是jid，是"@"前面的部分。  </span></span><br><span class="line">        reg.setUsername(account);  </span><br><span class="line">        reg.setPassword(password);  </span><br><span class="line">        <span class="comment">// 这边addAttribute不能为空，否则出错。所以做个标志是android手机创建的吧！！！！！  </span></span><br><span class="line">        reg.addAttribute(<span class="string">"android"</span>, <span class="string">"geolo_createUser_android"</span>);  </span><br><span class="line">        PacketFilter filter = <span class="keyword">new</span> AndFilter(<span class="keyword">new</span> PacketIDFilter(  </span><br><span class="line">                reg.getPacketID()), <span class="keyword">new</span> PacketTypeFilter(IQ.class));  </span><br><span class="line">        PacketCollector collector = getConnection().createPacketCollector(  </span><br><span class="line">                filter);  </span><br><span class="line">        getConnection().sendPacket(reg);  </span><br><span class="line">        IQ result = (IQ) collector.nextResult(SmackConfiguration  </span><br><span class="line">                .getPacketReplyTimeout());  </span><br><span class="line">        <span class="comment">// Stop queuing results停止请求results（是否成功的结果）  </span></span><br><span class="line">        collector.cancel();  </span><br><span class="line">        <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;  </span><br><span class="line">            Log.e(<span class="string">"regist"</span>, <span class="string">"No response from server."</span>);  </span><br><span class="line">            <span class="keyword">return</span> <span class="string">"0"</span>;  </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result.getType() == IQ.Type.RESULT) &#123;  </span><br><span class="line">            Log.v(<span class="string">"regist"</span>, <span class="string">"regist success."</span>);  </span><br><span class="line">            <span class="keyword">return</span> <span class="string">"1"</span>;  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// if (result.getType() == IQ.Type.ERROR)  </span></span><br><span class="line">            <span class="keyword">if</span> (result.getError().toString().equalsIgnoreCase(<span class="string">"conflict(409)"</span>)) &#123;  </span><br><span class="line">                Log.e(<span class="string">"regist"</span>, <span class="string">"IQ.Type.ERROR: "</span>  </span><br><span class="line">                        + result.getError().toString());  </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"2"</span>;  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                Log.e(<span class="string">"regist"</span>, <span class="string">"IQ.Type.ERROR: "</span>  </span><br><span class="line">                        + result.getError().toString());  </span><br><span class="line">                <span class="keyword">return</span> <span class="string">"3"</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 更改用户状态 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPresence</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;  </span><br><span class="line">        XMPPConnection con = getConnection();  </span><br><span class="line">        <span class="keyword">if</span> (con == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        Presence presence;  </span><br><span class="line">        <span class="keyword">switch</span> (code) &#123;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:  </span><br><span class="line">            presence = <span class="keyword">new</span> Presence(Presence.Type.available);  </span><br><span class="line">            con.sendPacket(presence);  </span><br><span class="line">            Log.v(<span class="string">"state"</span>, <span class="string">"设置在线"</span>);  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:  </span><br><span class="line">            presence = <span class="keyword">new</span> Presence(Presence.Type.available);  </span><br><span class="line">            presence.setMode(Presence.Mode.chat);  </span><br><span class="line">            con.sendPacket(presence);  </span><br><span class="line">            Log.v(<span class="string">"state"</span>, <span class="string">"设置Q我吧"</span>);  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:  </span><br><span class="line">            presence = <span class="keyword">new</span> Presence(Presence.Type.available);  </span><br><span class="line">            presence.setMode(Presence.Mode.dnd);  </span><br><span class="line">            con.sendPacket(presence);  </span><br><span class="line">            Log.v(<span class="string">"state"</span>, <span class="string">"设置忙碌"</span>);  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:  </span><br><span class="line">            presence = <span class="keyword">new</span> Presence(Presence.Type.available);  </span><br><span class="line">            presence.setMode(Presence.Mode.away);  </span><br><span class="line">            con.sendPacket(presence);  </span><br><span class="line">            Log.v(<span class="string">"state"</span>, <span class="string">"设置离开"</span>);  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:  </span><br><span class="line">            Roster roster = con.getRoster();  </span><br><span class="line">            Collection&lt;RosterEntry&gt; entries = roster.getEntries();  </span><br><span class="line">            <span class="keyword">for</span> (RosterEntry entry : entries) &#123;  </span><br><span class="line">                presence = <span class="keyword">new</span> Presence(Presence.Type.unavailable);  </span><br><span class="line">                presence.setPacketID(Packet.ID_NOT_AVAILABLE);  </span><br><span class="line">                presence.setFrom(con.getUser());  </span><br><span class="line">                presence.setTo(entry.getUser());  </span><br><span class="line">                con.sendPacket(presence);  </span><br><span class="line">                Log.v(<span class="string">"state"</span>, presence.toXML());  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="comment">// 向同一用户的其他客户端发送隐身状态  </span></span><br><span class="line">            presence = <span class="keyword">new</span> Presence(Presence.Type.unavailable);  </span><br><span class="line">            presence.setPacketID(Packet.ID_NOT_AVAILABLE);  </span><br><span class="line">            presence.setFrom(con.getUser());  </span><br><span class="line">            presence.setTo(StringUtils.parseBareAddress(con.getUser()));  </span><br><span class="line">            con.sendPacket(presence);  </span><br><span class="line">            Log.v(<span class="string">"state"</span>, <span class="string">"设置隐身"</span>);  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:  </span><br><span class="line">            presence = <span class="keyword">new</span> Presence(Presence.Type.unavailable);  </span><br><span class="line">            con.sendPacket(presence);  </span><br><span class="line">            Log.v(<span class="string">"state"</span>, <span class="string">"设置离线"</span>);  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        <span class="keyword">default</span>:  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"> <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获取所有组 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 所有组集合 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;RosterGroup&gt; <span class="title">getGroups</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        List&lt;RosterGroup&gt; grouplist = <span class="keyword">new</span> ArrayList&lt;RosterGroup&gt;();  </span><br><span class="line">        Collection&lt;RosterGroup&gt; rosterGroup = getConnection().getRoster()  </span><br><span class="line">                .getGroups();  </span><br><span class="line">        Iterator&lt;RosterGroup&gt; i = rosterGroup.iterator();  </span><br><span class="line">        <span class="keyword">while</span> (i.hasNext()) &#123;  </span><br><span class="line">            grouplist.add(i.next());  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> grouplist;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获取某个组里面的所有好友 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roster </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> groupName </span></span><br><span class="line"><span class="comment">     *            组名 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;RosterEntry&gt; <span class="title">getEntriesByGroup</span><span class="params">(String groupName)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        List&lt;RosterEntry&gt; Entrieslist = <span class="keyword">new</span> ArrayList&lt;RosterEntry&gt;();  </span><br><span class="line">        RosterGroup rosterGroup = getConnection().getRoster().getGroup(  </span><br><span class="line">                groupName);  </span><br><span class="line">        Collection&lt;RosterEntry&gt; rosterEntry = rosterGroup.getEntries();  </span><br><span class="line">        Iterator&lt;RosterEntry&gt; i = rosterEntry.iterator();  </span><br><span class="line">        <span class="keyword">while</span> (i.hasNext()) &#123;  </span><br><span class="line">            Entrieslist.add(i.next());  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> Entrieslist;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 获取用户头像信息 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Drawable <span class="title">getUserImage</span><span class="params">(String user)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        ByteArrayInputStream bais = <span class="keyword">null</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            VCard vcard = <span class="keyword">new</span> VCard();  </span><br><span class="line">            <span class="comment">// 加入这句代码，解决No VCard for  </span></span><br><span class="line">            ProviderManager.getInstance().addIQProvider(<span class="string">"vCard"</span>, <span class="string">"vcard-temp"</span>,  </span><br><span class="line">                    <span class="keyword">new</span> org.jivesoftware.smackx.provider.VCardProvider());  </span><br><span class="line">            <span class="keyword">if</span> (user == <span class="string">""</span> || user == <span class="keyword">null</span> || user.trim().length() &lt;= <span class="number">0</span>) &#123;  </span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            vcard.load(getConnection(), user + <span class="string">"@"</span>  </span><br><span class="line">                    + getConnection().getServiceName());  </span><br><span class="line">  </span><br><span class="line">            <span class="keyword">if</span> (vcard == <span class="keyword">null</span> || vcard.getAvatar() == <span class="keyword">null</span>)  </span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">            bais = <span class="keyword">new</span> ByteArrayInputStream(vcard.getAvatar());  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> FormatTools.getInstance().InputStream2Drawable(bais);  </span><br><span class="line">    &#125;  </span><br><span class="line"><span class="comment">// return FormatTools.getInstance().InputStream2Drawable（bais）;</span></span><br><span class="line"><span class="comment">// such good I can't argee more.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 查询用户 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userName </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> XMPPException </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">public</span> List&lt;HashMap&lt;String, String&gt;&gt; searchUsers(String userName) &#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        HashMap&lt;String, String&gt; user = <span class="keyword">null</span>;  </span><br><span class="line">        List&lt;HashMap&lt;String, String&gt;&gt; results = <span class="keyword">new</span> ArrayList&lt;HashMap&lt;String, String&gt;&gt;();  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="keyword">new</span> ServiceDiscoveryManager(getConnection());  </span><br><span class="line">  </span><br><span class="line">            UserSearchManager usm = <span class="keyword">new</span> UserSearchManager(getConnection());  </span><br><span class="line">  </span><br><span class="line">            Form searchForm = usm.getSearchForm(getConnection()  </span><br><span class="line">                    .getServiceName());  </span><br><span class="line">            Form answerForm = searchForm.createAnswerForm();  </span><br><span class="line">            answerForm.setAnswer(<span class="string">"userAccount"</span>, <span class="keyword">true</span>);  </span><br><span class="line">            answerForm.setAnswer(<span class="string">"userPhote"</span>, userName);  </span><br><span class="line">            ReportedData data = usm.getSearchResults(answerForm, <span class="string">"search"</span>  </span><br><span class="line">                    + getConnection().getServiceName());  </span><br><span class="line">  </span><br><span class="line">            Iterator&lt;Row&gt; it = data.getRows();  </span><br><span class="line">            Row row = <span class="keyword">null</span>;  </span><br><span class="line">            <span class="keyword">while</span> (it.hasNext()) &#123;  </span><br><span class="line">                user = <span class="keyword">new</span> HashMap&lt;String, String&gt;();  </span><br><span class="line">                row = it.next();  </span><br><span class="line">                user.put(<span class="string">"userAccount"</span>, row.getValues(<span class="string">"userAccount"</span>).next()  </span><br><span class="line">                        .toString());  </span><br><span class="line">                user.put(<span class="string">"userPhote"</span>, row.getValues(<span class="string">"userPhote"</span>).next()  </span><br><span class="line">                        .toString());  </span><br><span class="line">                results.add(user);  </span><br><span class="line">                <span class="comment">// 若存在，则有返回,UserName一定非空，其他两个若是有设，一定非空  </span></span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (XMPPException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> results;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 修改心情 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> status </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changeStateMessage</span><span class="params">(String status)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        Presence presence = <span class="keyword">new</span> Presence(Presence.Type.available);  </span><br><span class="line">        presence.setStatus(status);  </span><br><span class="line">        getConnection().sendPacket(presence);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 修改用户头像 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeImage</span><span class="params">(File file)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            VCard vcard = <span class="keyword">new</span> VCard();  </span><br><span class="line">            vcard.load(getConnection());  </span><br><span class="line">  </span><br><span class="line">            <span class="keyword">byte</span>[] bytes;  </span><br><span class="line">  </span><br><span class="line">            bytes = getFileBytes(file);  </span><br><span class="line">            String encodedImage = StringUtils.encodeBase64(bytes);  </span><br><span class="line">            vcard.setAvatar(bytes, encodedImage);  </span><br><span class="line">            vcard.setEncodedImage(encodedImage);  </span><br><span class="line">            vcard.setField(<span class="string">"PHOTO"</span>, <span class="string">"&lt;TYPE&gt;image/jpg&lt;/TYPE&gt;&lt;BINVAL&gt;"</span>  </span><br><span class="line">                    + encodedImage + <span class="string">"&lt;/BINVAL&gt;"</span>, <span class="keyword">true</span>);  </span><br><span class="line">  </span><br><span class="line">            ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(  </span><br><span class="line">                    vcard.getAvatar());  </span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 这里返回服务器经过处理后的图片???trancode</span></span><br><span class="line">            <span class="comment">// 如将图片centercrop,圆觉化，透明度做改变，</span></span><br><span class="line">     </span><br><span class="line">            FormatTools.getInstance().InputStream2Bitmap(bais);  </span><br><span class="line">  </span><br><span class="line">            vcard.save(getConnection());  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 删除当前用户 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteAccount</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            getConnection().getAccountManager().deleteAccount();  </span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (XMPPException e) &#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"><span class="comment">// getConnection().getAccountManager().deleteAccount();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 创建房间 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roomName </span></span><br><span class="line"><span class="comment">     *            房间名称 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> MultiUserChat <span class="title">createRoom</span><span class="params">(String user, String roomName,  </span></span></span><br><span class="line"><span class="function"><span class="params">            String password)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">  </span><br><span class="line">        MultiUserChat muc = <span class="keyword">null</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="comment">// 创建一个MultiUserChat  </span></span><br><span class="line">            muc = <span class="keyword">new</span> MultiUserChat(getConnection(), roomName + <span class="string">"@conference."</span>  </span><br><span class="line">                    + getConnection().getServiceName());  </span><br><span class="line">            <span class="comment">// 创建聊天室  </span></span><br><span class="line">            muc.create(roomName);  </span><br><span class="line">            <span class="comment">// 获得聊天室的配置表单  </span></span><br><span class="line">            Form form = muc.getConfigurationForm();  </span><br><span class="line">            <span class="comment">// 根据原始表单创建一个要提交的新表单。  </span></span><br><span class="line">            Form submitForm = form.createAnswerForm();  </span><br><span class="line">            <span class="comment">// 向要提交的表单添加默认答复  </span></span><br><span class="line">            <span class="keyword">for</span> (Iterator&lt;FormField&gt; fields = form.getFields(); fields  </span><br><span class="line">                    .hasNext();) &#123;  </span><br><span class="line">                FormField field = (FormField) fields.next();  </span><br><span class="line">                <span class="keyword">if</span> (!FormField.TYPE_HIDDEN.equals(field.getType())  </span><br><span class="line">                        &amp;&amp; field.getVariable() != <span class="keyword">null</span>) &#123;  </span><br><span class="line">                    <span class="comment">// 设置默认值作为答复  </span></span><br><span class="line">                    submitForm.setDefaultAnswer(field.getVariable());  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="comment">// 设置聊天室的新拥有者  </span></span><br><span class="line">            List&lt;String&gt; owners = <span class="keyword">new</span> ArrayList&lt;String&gt;();  </span><br><span class="line">            owners.add(getConnection().getUser());<span class="comment">// 用户JID  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"muc#roomconfig_roomowners"</span>, owners);  </span><br><span class="line">            <span class="comment">// 设置聊天室是持久聊天室，即将要被保存下来  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"muc#roomconfig_persistentroom"</span>, <span class="keyword">true</span>);  </span><br><span class="line">            <span class="comment">// 房间仅对成员开放  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"muc#roomconfig_membersonly"</span>, <span class="keyword">false</span>);  </span><br><span class="line">            <span class="comment">// 允许占有者邀请其他人  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"muc#roomconfig_allowinvites"</span>, <span class="keyword">true</span>);  </span><br><span class="line">            <span class="keyword">if</span> (!password.equals(<span class="string">""</span>)) &#123;  </span><br><span class="line">                <span class="comment">// 进入是否需要密码  </span></span><br><span class="line">                submitForm.setAnswer(<span class="string">"muc#roomconfig_passwordprotectedroom"</span>,  </span><br><span class="line">                        <span class="keyword">true</span>);  </span><br><span class="line">                <span class="comment">// 设置进入密码  </span></span><br><span class="line">                submitForm.setAnswer(<span class="string">"muc#roomconfig_roomsecret"</span>, password);  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="comment">// 能够发现占有者真实 JID 的角色  </span></span><br><span class="line">            <span class="comment">// submitForm.setAnswer("muc#roomconfig_whois", "anyone");  </span></span><br><span class="line">            <span class="comment">// 登录房间对话  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"muc#roomconfig_enablelogging"</span>, <span class="keyword">true</span>);  </span><br><span class="line">            <span class="comment">// 仅允许注册的昵称登录  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"x-muc#roomconfig_reservednick"</span>, <span class="keyword">true</span>);  </span><br><span class="line">            <span class="comment">// 允许使用者修改昵称  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"x-muc#roomconfig_canchangenick"</span>, <span class="keyword">false</span>);  </span><br><span class="line">            <span class="comment">// 允许用户注册房间  </span></span><br><span class="line">            submitForm.setAnswer(<span class="string">"x-muc#roomconfig_registration"</span>, <span class="keyword">false</span>);  </span><br><span class="line">            <span class="comment">// 发送已完成的表单（有默认值）到服务器来配置聊天室  </span></span><br><span class="line">            muc.sendConfigurationForm(submitForm);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (XMPPException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> muc;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 发送文件 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendFile</span><span class="params">(String user, String filePath)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> (getConnection() == <span class="keyword">null</span>)  </span><br><span class="line">            <span class="keyword">return</span>;  </span><br><span class="line">        <span class="comment">// 创建文件传输管理器  </span></span><br><span class="line">        FileTransferManager manager = <span class="keyword">new</span> FileTransferManager(getConnection());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 创建输出的文件传输  </span></span><br><span class="line">        OutgoingFileTransfer transfer = manager  </span><br><span class="line">                .createOutgoingFileTransfer(user);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 发送文件  </span></span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            transfer.sendFile(<span class="keyword">new</span> File(filePath), <span class="string">"You won't believe this!"</span>);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (XMPPException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 加入providers的函数 ASmack在/META-INF缺少一个smack.providers 文件 </span></span><br><span class="line"><span class="comment">     *  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pm </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configureConnection</span><span class="params">(ProviderManager pm)</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Private Data Storage  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"jabber:iq:private"</span>,  </span><br><span class="line">                <span class="keyword">new</span> PrivateDataManager.PrivateDataIQProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Time  </span></span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"jabber:iq:time"</span>,  </span><br><span class="line">                    Class.forName(<span class="string">"org.jivesoftware.smackx.packet.Time"</span>));  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;  </span><br><span class="line">            Log.w(<span class="string">"TestClient"</span>,  </span><br><span class="line">                    <span class="string">"Can't load class for org.jivesoftware.smackx.packet.Time"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Roster Exchange  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"x"</span>, <span class="string">"jabber:x:roster"</span>,  </span><br><span class="line">                <span class="keyword">new</span> RosterExchangeProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Message Events  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"x"</span>, <span class="string">"jabber:x:event"</span>,  </span><br><span class="line">                <span class="keyword">new</span> MessageEventProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Chat State  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"active"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/chatstates"</span>,  </span><br><span class="line">                <span class="keyword">new</span> ChatStateExtension.Provider());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"composing"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/chatstates"</span>,  </span><br><span class="line">                <span class="keyword">new</span> ChatStateExtension.Provider());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"paused"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/chatstates"</span>,  </span><br><span class="line">                <span class="keyword">new</span> ChatStateExtension.Provider());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"inactive"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/chatstates"</span>,  </span><br><span class="line">                <span class="keyword">new</span> ChatStateExtension.Provider());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"gone"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/chatstates"</span>,  </span><br><span class="line">                <span class="keyword">new</span> ChatStateExtension.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// XHTML  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"html"</span>, <span class="string">"http://jabber.org/protocol/xhtml-im"</span>,  </span><br><span class="line">                <span class="keyword">new</span> XHTMLExtensionProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Group Chat Invitations  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"x"</span>, <span class="string">"jabber:x:conference"</span>,  </span><br><span class="line">                <span class="keyword">new</span> GroupChatInvitation.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Service Discovery # Items  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"http://jabber.org/protocol/disco#items"</span>,  </span><br><span class="line">                <span class="keyword">new</span> DiscoverItemsProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Service Discovery # Info  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"http://jabber.org/protocol/disco#info"</span>,  </span><br><span class="line">                <span class="keyword">new</span> DiscoverInfoProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Data Forms  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"x"</span>, <span class="string">"jabber:x:data"</span>, <span class="keyword">new</span> DataFormProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// MUC User  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"x"</span>, <span class="string">"http://jabber.org/protocol/muc#user"</span>,  </span><br><span class="line">                <span class="keyword">new</span> MUCUserProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// MUC Admin  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"http://jabber.org/protocol/muc#admin"</span>,  </span><br><span class="line">                <span class="keyword">new</span> MUCAdminProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// MUC Owner  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"http://jabber.org/protocol/muc#owner"</span>,  </span><br><span class="line">                <span class="keyword">new</span> MUCOwnerProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Delayed Delivery  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"x"</span>, <span class="string">"jabber:x:delay"</span>,  </span><br><span class="line">                <span class="keyword">new</span> DelayInformationProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Version  </span></span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"jabber:iq:version"</span>,  </span><br><span class="line">                    Class.forName(<span class="string">"org.jivesoftware.smackx.packet.Version"</span>));  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;  </span><br><span class="line">            <span class="comment">// Not sure what's happening here.  </span></span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// VCard  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"vCard"</span>, <span class="string">"vcard-temp"</span>, <span class="keyword">new</span> VCardProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Offline Message Requests  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"offline"</span>, <span class="string">"http://jabber.org/protocol/offline"</span>,  </span><br><span class="line">                <span class="keyword">new</span> OfflineMessageRequest.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Offline Message Indicator  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"offline"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/offline"</span>,  </span><br><span class="line">                <span class="keyword">new</span> OfflineMessageInfo.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Last Activity  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"jabber:iq:last"</span>, <span class="keyword">new</span> LastActivity.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// User Search  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"jabber:iq:search"</span>, <span class="keyword">new</span> UserSearch.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// SharedGroupsInfo  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"sharedgroup"</span>,  </span><br><span class="line">                <span class="string">"http://www.jivesoftware.org/protocol/sharedgroup"</span>,  </span><br><span class="line">                <span class="keyword">new</span> SharedGroupsInfo.Provider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// JEP-33: Extended Stanza Addressing  </span></span><br><span class="line">        pm.addExtensionProvider(<span class="string">"addresses"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/address"</span>,  </span><br><span class="line">                <span class="keyword">new</span> MultipleAddressesProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// FileTransfer  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"si"</span>, <span class="string">"http://jabber.org/protocol/si"</span>,  </span><br><span class="line">                <span class="keyword">new</span> StreamInitiationProvider());  </span><br><span class="line">  </span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"http://jabber.org/protocol/bytestreams"</span>,  </span><br><span class="line">                <span class="keyword">new</span> BytestreamsProvider());  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// Privacy  </span></span><br><span class="line">        pm.addIQProvider(<span class="string">"query"</span>, <span class="string">"jabber:iq:privacy"</span>, <span class="keyword">new</span> PrivacyProvider());  </span><br><span class="line">        pm.addIQProvider(<span class="string">"command"</span>, <span class="string">"http://jabber.org/protocol/commands"</span>,  </span><br><span class="line">                <span class="keyword">new</span> AdHocCommandDataProvider());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"malformed-action"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/commands"</span>,  </span><br><span class="line">                <span class="keyword">new</span> AdHocCommandDataProvider.MalformedActionError());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"bad-locale"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/commands"</span>,  </span><br><span class="line">                <span class="keyword">new</span> AdHocCommandDataProvider.BadLocaleError());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"bad-payload"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/commands"</span>,  </span><br><span class="line">                <span class="keyword">new</span> AdHocCommandDataProvider.BadPayloadError());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"bad-sessionid"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/commands"</span>,  </span><br><span class="line">                <span class="keyword">new</span> AdHocCommandDataProvider.BadSessionIDError());  </span><br><span class="line">        pm.addExtensionProvider(<span class="string">"session-expired"</span>,  </span><br><span class="line">                <span class="string">"http://jabber.org/protocol/commands"</span>,  </span><br><span class="line">                <span class="keyword">new</span> AdHocCommandDataProvider.SessionExpiredError());  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>XMPP   xml  p2p  ？？？？ IM  即时聊天软件协议</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">CookieSyncManager.createInstance(arg7);  </span><br><span class="line">CookieManager.getInstance().removeAllCookie();</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">      e.b = <span class="string">"serv_getfans_shall.php"</span>;</span><br><span class="line">      e.c = <span class="string">"serv_login.php"</span>;</span><br><span class="line">      e.d = <span class="string">"serv_rapidlogin.php"</span>;</span><br><span class="line">      e.e = <span class="string">"serv_edit_password.php"</span>;</span><br><span class="line">      e.f = <span class="string">"serv_reg_visitor.php"</span>;</span><br><span class="line">      e.g = <span class="string">"serv_reg.php"</span>;</span><br><span class="line">      e.h = <span class="string">"serv_getcode.php"</span>;</span><br><span class="line">      e.i = <span class="string">"serv_reg_mobile.php"</span>;</span><br><span class="line">      e.j = <span class="string">"serv_loginmobile.php"</span>;</span><br><span class="line">      e.k = <span class="string">"serv_logout.php"</span>;</span><br><span class="line">      e.l = <span class="string">"serv_updateprofile.php"</span>;</span><br><span class="line">      e.m = <span class="string">"serv_getprofile.php"</span>;</span><br><span class="line">      e.n = <span class="string">"serv_getprofile_info.php"</span>;</span><br><span class="line">      e.o = <span class="string">"serv_devicetoken.php"</span>;</span><br><span class="line">      e.p = <span class="string">"serv_getalbum.php"</span>;</span><br><span class="line">      e.q = <span class="string">"serv_uploadphoto.php"</span>;</span><br><span class="line">      e.r = <span class="string">"serv_getsysgifts.php"</span>;</span><br><span class="line">      e.s = <span class="string">"serv_givegifts.php"</span>;</span><br><span class="line">      e.t = <span class="string">"serv_replytouser.php"</span>;</span><br><span class="line">      e.u = <span class="string">"serv_getsystags.php"</span>;</span><br><span class="line">      e.v = <span class="string">"serv_encounter.php"</span>;</span><br><span class="line">      e.w = <span class="string">"serv_getusergifts.php"</span>;</span><br><span class="line">      e.x = <span class="string">"serv_getuserleftgifts.php"</span>;</span><br><span class="line">      e.y = <span class="string">"serv_getfriends.php"</span>;</span><br><span class="line">      e.z = <span class="string">""</span>;</span><br><span class="line">      e.A = <span class="string">"v2/rooms/replay/band"</span>;</span><br><span class="line">      e.B = <span class="string">"serv_getinteract.php"</span>;</span><br><span class="line">      e.C = <span class="string">"serv_gettimeline.php"</span>;</span><br><span class="line">      e.D = <span class="string">"serv_interact.php"</span>;</span><br><span class="line">      e.E = <span class="string">"serv_updatefriendship.php"</span>;</span><br><span class="line">      e.F = <span class="string">"serv_getsysproducts.php"</span>;</span><br><span class="line">      e.G = <span class="string">"serv_order.php"</span>;</span><br><span class="line">      e.H = <span class="string">"serv_getboard.php"</span>;</span><br><span class="line">      e.I = <span class="string">"serv_getfans_contribution.php"</span>;</span><br><span class="line">      e.J = <span class="string">"serv_getprofile_achieve.php"</span>;</span><br><span class="line">      e.K = <span class="string">"serv_getnearby.php"</span>;</span><br><span class="line">      e.L = <span class="string">"serv_searchuser.php"</span>;</span><br><span class="line">      e.M = <span class="string">"serv_bindmobile.php"</span>;</span><br><span class="line">      e.N = <span class="string">"serv_getcode.php"</span>;</span><br><span class="line">      e.O = <span class="string">"serv_getnotif.php"</span>;</span><br><span class="line">      e.P = <span class="string">"serv_getsingleboard.php"</span>;</span><br><span class="line">      e.Q = <span class="string">"serv_getinteractusers.php"</span>;</span><br><span class="line">      e.R = <span class="string">"serv_getrankdetail.php"</span>;</span><br><span class="line">      e.S = <span class="string">"serv_getnotifsys.php"</span>;</span><br><span class="line">      e.T = <span class="string">"serv_verifyaccount.php"</span>;</span><br><span class="line">      e.U = <span class="string">"serv_check_code.php"</span>;</span><br><span class="line">      e.V = <span class="string">"serv_loginweibo.php"</span>;</span><br><span class="line">      e.W = <span class="string">"serv_loginqq.php"</span>;</span><br><span class="line">      e.X = <span class="string">"serv_loginweixin.php"</span>;</span><br><span class="line">      e.Y = <span class="string">"serv_loginrenren.php"</span>;</span><br><span class="line">      e.Z = <span class="string">"serv_getactuserinfo.php"</span>;</span><br><span class="line">      e.aa = <span class="string">"serv_getactcomment.php"</span>;</span><br><span class="line">      e.ab = <span class="string">"serv_commentact.php"</span>;</span><br><span class="line">      e.ac = <span class="string">"serv_getactivities.php"</span>;</span><br><span class="line">      e.ad = <span class="string">"v2/yrooms/posters"</span>;</span><br><span class="line">      e.ae = <span class="string">"v2/users/%d/roomPosterSwitch"</span>;</span><br><span class="line">      e.af = <span class="string">"serv_getactdetail.php"</span>;</span><br><span class="line">      e.ag = <span class="string">"serv_applyact.php"</span>;</span><br><span class="line">      e.ah = <span class="string">"serv_getusergiftsbyrank.php"</span>;</span><br><span class="line">      e.ai = <span class="string">"serv_getactvoters.php"</span>;</span><br><span class="line">      e.aj = <span class="string">"serv_updateactintro.php"</span>;</span><br><span class="line">      e.ak = <span class="string">"serv_getshowoffhis.php"</span>;</span><br><span class="line">      e.al = <span class="string">"serv_syssetup.php"</span>;</span><br><span class="line">      e.am = <span class="string">"serv_activate.php"</span>;</span><br><span class="line">      e.an = <span class="string">"serv_getalbumcomment.php"</span>;</span><br><span class="line">      e.ao = <span class="string">"serv_commentalbum.php"</span>;</span><br><span class="line">      e.ap = <span class="string">"serv_commenthall.php"</span>;</span><br><span class="line">      e.aq = <span class="string">"serv_gethallactcomment.php"</span>;</span><br><span class="line">      e.ar = <span class="string">"serv_manageblacklist.php"</span>;</span><br><span class="line">      e.as = <span class="string">"serv_getblacklist.php"</span>;</span><br><span class="line">      e.at = <span class="string">"serv_user_attention.php"</span>;</span><br><span class="line">      e.au = <span class="string">"serv_user_comment_lists.php"</span>;</span><br><span class="line">      e.av = <span class="string">"serv_delete_usercomment.php"</span>;</span><br><span class="line">      e.aw = <span class="string">"serv_getusermedals.php"</span>;</span><br><span class="line">      e.ax = <span class="string">"serv_getuserlevel.php"</span>;</span><br><span class="line">      e.ay = <span class="string">"serv_ppcall.php"</span>;</span><br><span class="line">      e.az = <span class="string">"serv_check_ppcall.php"</span>;</span><br><span class="line">      e.aA = <span class="string">"serv_ppcall_userdetail.php"</span>;</span><br><span class="line">      e.aB = <span class="string">"serv_ppcall_usersetup.php"</span>;</span><br><span class="line">      e.aC = <span class="string">"serv_ppcall_userlist.php"</span>;</span><br><span class="line">      e.aD = <span class="string">"serv_deal_sysmessage.php"</span>;</span><br><span class="line">      e.aE = <span class="string">"serv_get_giftpackages.php"</span>;</span><br><span class="line">      e.aF = <span class="string">"serv_getandroid_rechargelist.php"</span>;</span><br><span class="line">      e.aG = <span class="string">"serv_smspay_request.php"</span>;</span><br><span class="line">      e.aH = <span class="string">"serv_smspay_products.php"</span>;</span><br><span class="line">      e.aI = <span class="string">"serv_getfriends.php"</span>;</span><br><span class="line">      e.aJ = <span class="string">"serv_updatefriendship.php"</span>;</span><br><span class="line">      e.aK = <span class="string">"serv_update_pushswitch.php"</span>;</span><br><span class="line">      e.aL = <span class="string">"serv_update_wardswitch.php"</span>;</span><br><span class="line">      e.aM = <span class="string">"serv_android_recharge.php"</span>;</span><br><span class="line">      e.aN = <span class="string">"serv_get_androidrecharge_result.php"</span>;</span><br><span class="line">      e.aO = <span class="string">"serv_getvipdetail.php"</span>;</span><br><span class="line">      e.aP = <span class="string">"serv_vip_exchange_gold.php"</span>;</span><br><span class="line">      e.aQ = <span class="string">"serv_buy_vip.php"</span>;</span><br><span class="line">      e.aR = <span class="string">"v2/mall/buyvip"</span>;</span><br><span class="line">      e.aS = <span class="string">"serv_getprofile_prop.php"</span>;</span><br><span class="line">      e.aT = <span class="string">"serv_get_achievement_profile.php"</span>;</span><br><span class="line">      e.aU = <span class="string">"serv_getprops.php"</span>;</span><br><span class="line">      e.aV = <span class="string">"serv_buyprop.php"</span>;</span><br><span class="line">      e.aW = <span class="string">"v2/mall/buyvehicle"</span>;</span><br><span class="line">      e.aX = <span class="string">"serv_getprop_detail.php"</span>;</span><br><span class="line">      e.aY = <span class="string">"serv_completetask.php"</span>;</span><br><span class="line">      e.aZ = <span class="string">"serv_getletterusers.php"</span>;</span><br><span class="line">      e.ba = <span class="string">"serv_getfamilyposters.php"</span>;</span><br><span class="line">      e.bb = <span class="string">"serv_joinfamily.php"</span>;</span><br><span class="line">      e.bc = <span class="string">"serv_editfamily.php"</span>;</span><br><span class="line">      e.bd = <span class="string">"serv_getfamilyinfo.php"</span>;</span><br><span class="line">      e.be = <span class="string">"serv_getfamilymembers.php"</span>;</span><br><span class="line">      e.bf = <span class="string">"serv_managefamilymembers.php"</span>;</span><br><span class="line">      e.bg = <span class="string">"serv_report_uploadmedia_status.php"</span>;</span><br><span class="line">      e.bh = <span class="string">"serv_getfamilyboard.php"</span>;</span><br><span class="line">      e.bi = <span class="string">"serv_searchfamily.php"</span>;</span><br><span class="line">      e.bj = <span class="string">"serv_checkmyfamily.php"</span>;</span><br><span class="line">      e.bk = <span class="string">"serv_getfamilyapplyinfo.php"</span>;</span><br><span class="line">      e.bl = <span class="string">"serv_deletefamilyapplyinfo.php"</span>;</span><br><span class="line">      e.bm = <span class="string">"serv_getactcomment.php"</span>;</span><br><span class="line">      e.bn = <span class="string">"serv_commentact.php"</span>;</span><br><span class="line">      e.bo = <span class="string">"serv_gethot.php"</span>;</span><br><span class="line">      e.bp = <span class="string">"serv_upload4chat.php"</span>;</span><br><span class="line">      e.bq = <span class="string">"serv_dp_update_relation.php"</span>;</span><br><span class="line">      e.br = <span class="string">"serv_interact.php"</span>;</span><br><span class="line">      e.bs = <span class="string">"serv_recommend_game.php"</span>;</span><br><span class="line">      e.bt = <span class="string">"serv_gethalltaskext.php"</span>;</span><br><span class="line">      e.bu = <span class="string">"serv_update_livestatus.php"</span>;</span><br><span class="line">      e.bv = <span class="string">"1234567890"</span>;</span><br><span class="line">      e.bw = <span class="number">0</span>;</span><br><span class="line">      e.bx = <span class="string">"statuscode"</span>;</span><br><span class="line">      e.by = <span class="string">"message"</span>;</span><br><span class="line">      e.bz = -<span class="number">100</span>;</span><br><span class="line">      e.bA = -<span class="number">10001</span>;</span><br><span class="line">      e.bB = <span class="number">0</span>;</span><br><span class="line">      e.bC = <span class="string">"v2/users/%d/receivedgifts"</span>;</span><br><span class="line">      e.bD = <span class="string">"v2/users/%d/sendedgifts"</span>;</span><br><span class="line">      e.bE = <span class="string">"v2/users/privateMessage/%d/status"</span>;</span><br><span class="line">      e.bF = <span class="string">"v2/users/privateMessage/%d/block"</span>;</span><br><span class="line">      e.bG = <span class="string">"v2/users/%d/anonymous"</span>;</span><br><span class="line">      e.bH = <span class="string">"v2/yrooms/%d/silentall"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>SQLite 同步???  </p><pre><code>public void onUpgrade(SQLiteDatabase arg2, int arg3, int arg4) {   arg2.execSQL(&quot;DROP TABLE IF EXISTS show_res&quot;);  }// 先删除表，之后获取数据，之后再new create table??? 这样???// 还是直接在原来的表修改数据，alterTable</code></pre><p>package com.showself.show.f;  a</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.e == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">this</span>.e();</span><br><span class="line">                <span class="keyword">this</span>.e.connect();</span><br><span class="line">                <span class="keyword">this</span>.e.login(v1.a(), v1.b(), <span class="keyword">this</span>.b);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">this</span>.e.isConnected()) &#123;</span><br><span class="line">                <span class="keyword">this</span>.e.connect();</span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">this</span>.e.isAuthenticated()) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.e.login(v1.a(), v1.b(), <span class="keyword">this</span>.b);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">this</span>.e.isAuthenticated()) &#123;</span><br><span class="line">                <span class="keyword">this</span>.e.connect();</span><br><span class="line">                <span class="keyword">this</span>.e.login(v1.a(), v1.b(), <span class="keyword">this</span>.b);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">this</span>.e.getUser().split(<span class="string">"@"</span>)[<span class="number">0</span>].equals(v1.a())) &#123;</span><br><span class="line">                <span class="keyword">this</span>.e.sendPacket(<span class="keyword">new</span> Presence(org.jivesoftware.smack.packet.Presence$Type.unavailable));</span><br><span class="line">                <span class="keyword">this</span>.e.connect();</span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">this</span>.e.isAuthenticated()) &#123;</span><br><span class="line">                    <span class="keyword">this</span>.e.login(v1.a(), v1.b(), <span class="keyword">this</span>.b);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;   <span class="comment">// XMMP  connect</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.activityList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> v1;</span><br><span class="line">        <span class="keyword">for</span>(v1 = <span class="number">0</span>; v1 &lt; a.activityList.size(); ++v1) &#123;</span><br><span class="line">            a.activityList.get(v1).finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> com.showself.ui.a$<span class="number">1</span>().start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺便hook Utils类的所有方法，Log所有方法 LogUtil所有方法</p><p>I can’t say more。</p><p>后来发现  软件用了XMMP的聊天协议，难怪抓包抓不到，openfire 的smack框架，</p><p>对应前面的 connect sendIQ，</p><p>直接下载了一个版本的smack框架，按照app里面的方法直接调用，主要是app的smack版本不知道是什么版本，下载了个不是太新的smack版，其中app里面的两个方法，smack版里没有，直接就少写了，先connect，再发一个enterRoom Msg，再SendIQ,居然这样也行，我也是醉了???</p><p>最后直接new Thread，在接收到用户进来的消息时候，自己sendkeepLive msg,再sendIQ消息，这样对方进来的时候就直接收到一条 欢迎到来的信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;dex 脱壳mark&lt;/p&gt;
&lt;p&gt;xposed hool loadDexFile 函数???&lt;/p&gt;
&lt;p&gt;IDA ？？？&lt;/p&gt;
&lt;p&gt;脱壳神器drizzleDumper工具&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/DrizzleRisk/
      
    
    </summary>
    
      <category term="逆向" scheme="http://yoursite.com/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="逆向" scheme="http://yoursite.com/tags/%E9%80%86%E5%90%91/"/>
    
      <category term="dex" scheme="http://yoursite.com/tags/dex/"/>
    
  </entry>
  
  <entry>
    <title>DL动态加载阅读笔记</title>
    <link href="http://yoursite.com/2018/03/14/dynamic-load-apk/"/>
    <id>http://yoursite.com/2018/03/14/dynamic-load-apk/</id>
    <published>2018-03-14T12:39:51.097Z</published>
    <updated>2018-03-14T12:36:32.860Z</updated>
    
    <content type="html"><![CDATA[<p>类比360安全卫生的添加插件按钮，热修复等，android插件化是常见的一种技术</p><p>DL机制提供了动态加载的实现:<a href="https://github.com/singwhatiwanna/dynamic-load-apk" target="_blank" rel="noopener">https://github.com/singwhatiwanna/dynamic-load-apk</a></p><p>插件化的apk作为独立的apk可以独自安装，也可以用DexClassLoader加载，获取其中需要调用的Activity类，再反射调用即可</p><p>需要解决的两大问题:</p><p>资源管理 ： 插件中的R.drawable.aaaaaa.jpg 在宿主app里面并不存在</p><p>Activity生命周期管理：因为Activity是反射生成的，当你按了返回按钮的时候，Activity只是一个普通类，它并不知道你按下了返回按钮</p><p>#资源管理:</p><p>activity的工作主要是由ContextImpl来完成的， 它在activity中是一个叫做mBase的成员变量。注意到Context中有如下两个抽象方法，看起来是和资源有关的，实际上context就是通过它们来获取资源的，这两个抽象方法的真正实现在ContextImpl中。也即是说，只要我们自己实现这两个方法，就可以解决资源问题了</p><p>/*<em> Return an AssetManager instance for your application’s package. </em>/<br>​    public abstract AssetManager getAssets();</p><p>​    /*<em> Return a Resources instance for your application’s package. </em>/<br>​    public abstract Resources getResources();</p><p>但是首先要把资源添加到AssetManager和Resources里面</p><p>参见：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AssetManager assetManager = <span class="keyword">this</span>.createAssetManager(dexPath);</span><br><span class="line">Resources resources = <span class="keyword">this</span>.createResources(assetManager);</span><br></pre></td></tr></table></figure><p>这里createAssetManager采取了反射addAsset方法将资源加进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">private AssetManager createAssetManager(String dexPath) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        AssetManager assetManager = (AssetManager)AssetManager.class.newInstance();</span><br><span class="line">        Method addAssetPath = assetManager.getClass().getMethod(&quot;addAssetPath&quot;, new Class[]&#123;String.class&#125;);</span><br><span class="line">        addAssetPath.invoke(assetManager, new Object[]&#123;dexPath&#125;);</span><br><span class="line">        return assetManager;</span><br><span class="line">    &#125; catch (Exception var4) &#123;</span><br><span class="line">        var4.printStackTrace();</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private Resources createResources(AssetManager assetManager) &#123;</span><br><span class="line">        Resources superRes = this.mContext.getResources();</span><br><span class="line">        Resources resources = new Resources(assetManager, superRes.getDisplayMetrics(), superRes.getConfiguration());</span><br><span class="line">        return resources;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>重点来了:资源已经加进去了，但是怎么获取到更新后的资源呢，这里可以重载获取资源的方法</p><p><code>@Override</code>  </p><p><code>public AssetManager getAssets() {</code>  </p><p>​    <code>return mAssetManager == null ? super.getAssets() : mAssetManager;</code>  </p><p><code>}</code>  </p><p><code>@Override</code>  </p><p><code>public Resources getResources() {</code>  </p><p>​    <code>return mResources == null ? super.getResources() : mResources;</code>  </p><p><code></code>}`  </p><p>这样，插件中的apk也可以使用R.drawable.aaa.png来访问资源了</p><p>#Activity的生命周期管理</p><p>DL这里用的非常好，直接用DLProxyActivity来托管反射生成类的Activity，只要在宿主里面注册一个DLProxyActivity</p><pre><code>&lt;activity    android:name=&quot;com.ryg.dynamicload.DLProxyActivity&quot;    android:label=&quot;@string/app_name&quot; &gt;    &lt;intent-filter&gt;        &lt;action android:name=&quot;com.ryg.dynamicload.proxy.activity.VIEW&quot; /&gt;        &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;    &lt;/intent-filter&gt;&lt;/activity&gt;</code></pre><p>这样这个DLProxyActivity就是在宿主里面可见的，它的生命周期由系统管理，例如我们想执行的是360SafeActivity，只需要反射生成360SafeActivity，并调用setRemoteActivity(Activity a)将360SafeActivity托管给DLProxyActivity管理即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public void attach(DLPlugin remoteActivity, DLPluginManager pluginManager) &#123;</span><br><span class="line">    this.mRemoteActivity = remoteActivity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>各个生命周期的方法如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">protected void onStart() &#123;</span><br><span class="line">    this.mRemoteActivity.onStart();</span><br><span class="line">    super.onStart();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void onRestart() &#123;</span><br><span class="line">    this.mRemoteActivity.onRestart();</span><br><span class="line">    super.onRestart();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void onResume() &#123;</span><br><span class="line">    this.mRemoteActivity.onResume();</span><br><span class="line">    super.onResume();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void onPause() &#123;</span><br><span class="line">    this.mRemoteActivity.onPause();</span><br><span class="line">    super.onPause();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void onStop() &#123;</span><br><span class="line">    this.mRemoteActivity.onStop();</span><br><span class="line">    super.onStop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void onDestroy() &#123;</span><br><span class="line">    this.mRemoteActivity.onDestroy();</span><br><span class="line">    super.onDestroy();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就神不知鬼不觉地调用了插件360SafeActivity的生命周期函数</p><p>再看360SafeActivity是怎么反射出来的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TargetApi</span>(<span class="number">14</span>)</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">launchTargetActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Class&lt;?&gt; localClass = <span class="keyword">this</span>.getClassLoader().loadClass(<span class="keyword">this</span>.mClass);</span><br><span class="line">        Constructor&lt;?&gt; localConstructor = localClass.getConstructor(<span class="keyword">new</span> Class[<span class="number">0</span>]);</span><br><span class="line">        Object instance = localConstructor.newInstance(<span class="keyword">new</span> Object[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">this</span>.mPluginActivity = (DLPlugin)instance;</span><br><span class="line">        ((DLAttachable)<span class="keyword">this</span>.mProxyActivity).attach(<span class="keyword">this</span>.mPluginActivity, <span class="keyword">this</span>.mPluginManager);</span><br><span class="line">        Log.d(<span class="string">"DLProxyImpl"</span>, <span class="string">"instance = "</span> + instance);</span><br><span class="line">        <span class="keyword">this</span>.mPluginActivity.attach(<span class="keyword">this</span>.mProxyActivity, <span class="keyword">this</span>.mPluginPackage);</span><br><span class="line">         <span class="comment">//在这里调用了attch，将360SafeActivity的生命周期交给DLProxyActivity管理</span></span><br><span class="line">        Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">        bundle.putInt(<span class="string">"extra.from"</span>, <span class="number">1</span>); <span class="comment">// 声明是从外部启动的</span></span><br><span class="line">        <span class="keyword">this</span>.mPluginActivity.onCreate(bundle);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var5) &#123;</span><br><span class="line">        var5.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中定义了DLPlugin接口声明了一系列的生命周期函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">public interface DLPlugin &#123;</span><br><span class="line">    void onCreate(Bundle var1);</span><br><span class="line"></span><br><span class="line">    void onStart();</span><br><span class="line"></span><br><span class="line">    void onRestart();</span><br><span class="line"></span><br><span class="line">    void onActivityResult(int var1, int var2, Intent var3);</span><br><span class="line"></span><br><span class="line">    void onResume();</span><br><span class="line"></span><br><span class="line">    void onPause();</span><br><span class="line"></span><br><span class="line">    void onStop();</span><br><span class="line"></span><br><span class="line">    void onDestroy();</span><br><span class="line"></span><br><span class="line">    void attach(Activity var1, DLPluginPackage var2);</span><br><span class="line"></span><br><span class="line">    void onSaveInstanceState(Bundle var1);</span><br><span class="line"></span><br><span class="line">    void onNewIntent(Intent var1);</span><br><span class="line"></span><br><span class="line">    void onRestoreInstanceState(Bundle var1);</span><br><span class="line"></span><br><span class="line">    boolean onTouchEvent(MotionEvent var1);</span><br><span class="line"></span><br><span class="line">    boolean onKeyUp(int var1, KeyEvent var2);</span><br><span class="line"></span><br><span class="line">    void onWindowAttributesChanged(LayoutParams var1);</span><br><span class="line"></span><br><span class="line">    void onWindowFocusChanged(boolean var1);</span><br><span class="line"></span><br><span class="line">    void onBackPressed();</span><br><span class="line"></span><br><span class="line">    boolean onCreateOptionsMenu(Menu var1);</span><br><span class="line"></span><br><span class="line">    boolean onOptionsItemSelected(MenuItem var1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后再定义public class DLBasePluginActivity extends Activity implements DLPlugin {  }</p><p>这样我们的360SafeActivity只需要继承于DLBasePluginActivity 就可以了</p><p>其中很奇怪的是Activity里面已经有了void onStart();方法，DLPlugin再定义一个void onStart();方法，</p><p>这样不是方法冲突了吗?假如调用onStart()；它知道调用谁的?</p><p>既然Activity里面已经有了onStart方法了，为什么还要声明一个接口DLPlugin</p><p>后来发现 Activity的生命周期函数onStart，onStop，onCreate这些都是protected方法，而DLPlugin的onStart方法是public的，所以是不冲突的</p><p>但是为什么Activity里面已经有了onStart方法了，为什么还要声明一个接口DLPlugin</p><p>因为onStart，onStop，onCreate这些都是protected方法，protected方法是包访问权限的，在反射生成的实例是不能直接调用的，也就是说</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; localClass = <span class="keyword">this</span>.getClassLoader().loadClass(<span class="keyword">this</span>.mClass);</span><br><span class="line">Constructor&lt;?&gt; localConstructor = localClass.getConstructor(<span class="keyword">new</span> Class[<span class="number">0</span>]);</span><br><span class="line">Object instance = localConstructor.newInstance(<span class="keyword">new</span> Object[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">this</span>.mPluginActivity = (DLPlugin)instance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.mPluginActivity.onStart()方法是报错的，假如要使用onStart方法，要反射修改onStart方法的修饰符</span><br></pre></td></tr></table></figure><p>但是为什么我们也可以写这样的代码:</p><p><code>Class MyActivity extends Activity{</code></p><p>​    <code>@Override</code></p><p>​    <code>void onStart(){</code></p><p>​        <code>Log.d(&quot;1&quot;);</code></p><p>​    <code>}</code></p><p><code>}</code></p><p>这是因为这里的MyActivity是由系统托管生命周期的，它的onStart方法是在android.app包内调用的，因为protected方法是包访问权限，所以这里onStart方法不会报异常</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;类比360安全卫生的添加插件按钮，热修复等，android插件化是常见的一种技术&lt;/p&gt;
&lt;p&gt;DL机制提供了动态加载的实现:&lt;a href=&quot;https://github.com/singwhatiwanna/dynamic-load-apk&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="github开源阅读笔记" scheme="http://yoursite.com/categories/github%E5%BC%80%E6%BA%90%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>glide阅读笔记</title>
    <link href="http://yoursite.com/2018/03/14/%E6%B5%85%E8%B0%88glide/"/>
    <id>http://yoursite.com/2018/03/14/浅谈glide/</id>
    <published>2018-03-14T12:39:51.097Z</published>
    <updated>2018-03-14T12:38:38.644Z</updated>
    
    <content type="html"><![CDATA[<p>类比RxJava,glide,JavaPoet这些优秀的android流式api真是令人感叹</p><pre><code>Glide.with(this)           .asDrawable()            .load(&quot;http://i6.topit.me/6/5d/45/1131907198420455d6o.jpg&quot;)            .apply(fitCenterTransform(this))            .apply(placeholderOf(R.drawable.skyblue_logo_wechatfavorite_checked))            .into(imageView);            //such beatiful</code></pre><p>glide 资源加载策略</p><p><img src="C:\Users\Administrator\Desktop\md\glide_res_load.png" alt="glide_res_load"></p><p>glide 里面的泛型用的非常好</p><p>&lt;model,data&gt;  从model到data的映射</p><p>可以为 &lt;url,InputStream&gt;     &lt;file,inputStream&gt;    &lt;cache,inputStream&gt;</p><p>&lt;data,resource&gt;   &lt;inputStream,Bitmap&gt;    &lt;inputStream,GifDrawable&gt;</p><p>令人感叹</p><p>缓存策略也是非常好 ，有LruCache和diskCache，采取了内存缓存和磁盘缓存两种模式</p><p>其中也引用了非常好的一个策略模式？？？ I can’t agree more.</p><p>什么是策略模式，根据不同的情况生成不同的策略，可以配置的</p><p>例如可以应用 nodiskCache 策略，skipMemoryCache 策略</p><p>DiskCache.None</p><p>DiskCache.SaveOrginData</p><p>DiskCache.SaveTransCode</p><p>假如我们做缓存的时候，肯定是直接把图片写入文件就可以了，之后再写一个shardperence，建立这个映射</p><xml><br><br>​    <url2file name="http://1.1.1.1/test.jpg" value="/cache/jpg/test.jpg"><br><br></url2file></xml><p>glide的磁盘缓存 采取了diskLruCache，这里会生成journal文件保存了对图片的所有修改和图片的有效性</p><p>采取 md5的形式命名图片，并在journal存储着文件对应的md5和大小，journal有着dirty，removed，cleaned，</p><p>read操作，那么这里的md5是怎么来的，这里的设计也是非常的好，不仅是url还包含了图片的宽度和高度，图片格式，图片大小等对象，所以假如url不变，服务器对应的图片换了，也还是可以刷新缓存的</p><p>其中还引用了对象池概念 </p><p>自己继承于ExecutorService，实现了不同消息所分发的不同线程</p><p>Bitmap池      用于listView等快速的构建出view，还用到prefill， 预加载，同时也应用了三种策略模式，bitmapCOnfig</p><p>ArrayPool  数组池 并提供了ByteArrayPool 和IntArrayPool两种实现</p><p>再看资源的加载流程，如何从一个url得到一个InputStream，&lt;model，data&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">EngineResource&lt;?&gt; cached  =loadFromCache(key,isMemoryCacheable);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(cached!=<span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">cb.onResourceReady(cached);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">//先从内存查找</span></span><br><span class="line"></span><br><span class="line">EngineResource&lt;?&gt; activie = loadFromActiveResources(key,isMemoryCacheable);</span><br><span class="line"><span class="comment">// 再从第二级缓存 常用的Resources HashMap中查找</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(active!=<span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">cb.onResourceReady(activie); <span class="comment">//找到了，回调</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EngineJob current = job.get(key);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(current != <span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">current.addCallback(cb);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> LoadStatus(cb,current);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EngineJob engineJob = engineJobFactory.build(key,isMemoryCacheable);</span><br><span class="line"></span><br><span class="line">DecodeJob&lt;T,Z,R&gt; decodeJob = <span class="keyword">new</span> DecodeJob(key,width,height,fetcher,loadProvider,transformation,transcoder,diskCacheProvider,diskCacheStrategy,priority);</span><br><span class="line"></span><br><span class="line">EngineRunnable runnable = <span class="keyword">new</span> EngineRunnable(engineJob,decodeJob,priortiy);</span><br><span class="line"></span><br><span class="line">jobs.put(key,engineJob);</span><br><span class="line"></span><br><span class="line">engineJob.addCallback(cb);</span><br><span class="line"></span><br><span class="line">engineJob.start(runnable);  <span class="comment">// 开始获取数据</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\Desktop\md\缓存流程.png" alt="缓存流程"></p><p>这里的&lt;model,Data&gt; 配置了接口，并提供了volley和okhttp的实现</p><p>再看下 glide的三大操作</p><p>with  —-&gt;load  —&gt;into</p><p>with 这里，返回一个requestManager</p><p>这里非常的好的是一个生命周期设计模式</p><p>当我们的activity处于后台或者销毁的时候，我们肯定不希望这些请求继续，不然下一个activity的请求肯定卡死了</p><p>这里实现了一个生命周期接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public interface LifecycleListener &#123;</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Callback for when &#123;@link android.app.Fragment#onStart()&#125;&#125; or &#123;@link</span><br><span class="line">   * android.app.Activity#onStart()&#125; is called.</span><br><span class="line">   */</span><br><span class="line">  void onStart();</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Callback for when &#123;@link android.app.Fragment#onStop()&#125;&#125; or &#123;@link</span><br><span class="line">   * android.app.Activity#onStop()&#125;&#125; is called.</span><br><span class="line">   */</span><br><span class="line">  void onStop();</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * Callback for when &#123;@link android.app.Fragment#onDestroy()&#125;&#125; or &#123;@link</span><br><span class="line">   * android.app.Activity#onDestroy()&#125; is called.</span><br><span class="line">   */</span><br><span class="line">  void onDestroy();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>监听于activity的onStart，onStop，onDestory事件</p><p>但是我们的请求是在线程池里面进行的，它怎么知道activity是否销毁了</p><p>它在into(ImageView)这个对象里面添加了一个不可见的fragment，当这个ImageView被销毁的时候，fragment也肯定要被销毁，这里就会调用fragment的onDestory或者onDetach方法了，这个fragment是我们实现的，所以我们可以在其ondestory里面  清空请求，在onStart或者onAttach方法 开始请求</p><p>这里通过RequestManager来管理生命周期，fragment中回调RequestManager的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RequestManager</span></span></span><br><span class="line"><span class="class">@<span class="title">Override</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">void</span> <span class="title">onStart</span>() </span>&#123;</span><br><span class="line">  resumeRequests();</span><br><span class="line">  targetTracker.onStart();</span><br><span class="line">&#125;  <span class="comment">// 如此的简单明了</span></span><br></pre></td></tr></table></figure><p>with —&gt;requestManager</p><p>as   —–&gt;requestManager –&gt;requestBuilder</p><p>load requestBuilder —&gt;requestBuilder</p><p>into requestBuilder—&gt;Target</p><p>load  配置好url，接下来步入into</p><p>into 这里调用了requestManager.track(target, request);开始发起请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">void track(@NonNull Target&lt;?&gt; target, @NonNull Request request) &#123;</span><br><span class="line">  targetTracker.track(target);</span><br><span class="line">  requestTracker.runRequest(request);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再runRequest —&gt;  request.begin();</p><p>这里也将Request定义为一个接口，其中request的生命周期声明得非常好啊，begin，pause,clear,resycle,还提供了isEquivalentTo，一个好的接口能解决多少问题啊!!!!!!!!!!!!!!!!!!!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public interface Request &#123;</span><br><span class="line">  void begin();</span><br><span class="line"></span><br><span class="line">  void pause();</span><br><span class="line"></span><br><span class="line">  void clear();</span><br><span class="line"></span><br><span class="line">  boolean isPaused();</span><br><span class="line"></span><br><span class="line">  boolean isRunning();</span><br><span class="line"></span><br><span class="line">  boolean isComplete();</span><br><span class="line"></span><br><span class="line">  boolean isResourceSet();</span><br><span class="line"></span><br><span class="line">  boolean isCancelled();</span><br><span class="line"></span><br><span class="line">  boolean isFailed();</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  void recycle();</span><br><span class="line"></span><br><span class="line">  boolean isEquivalentTo(Request other);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用了SimpleRequest的begin方法，步入begin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">status = Status.WAITING_FOR_SIZE;</span><br><span class="line">if (Util.isValidDimensions(overrideWidth, overrideHeight)) &#123;</span><br><span class="line">  onSizeReady(overrideWidth, overrideHeight);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  target.getSize(this);  //获取imageView的宽度和高度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在static final class SizeDeterminer 里面实现了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getSize</span><span class="params">(@NonNull SizeReadyCallback cb)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> currentWidth = getTargetWidth();</span><br><span class="line">  <span class="keyword">int</span> currentHeight = getTargetHeight();</span><br><span class="line">  <span class="keyword">if</span> (isViewStateAndSizeValid(currentWidth, currentHeight)) &#123;</span><br><span class="line">    cb.onSizeReady(currentWidth, currentHeight);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// We want to notify callbacks in the order they were added and we only expect one or two</span></span><br><span class="line">  <span class="comment">// callbacks to be added a time, so a List is a reasonable choice.</span></span><br><span class="line">  <span class="keyword">if</span> (!cbs.contains(cb)) &#123;</span><br><span class="line">    cbs.add(cb);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (layoutListener == <span class="keyword">null</span>) &#123;</span><br><span class="line">    ViewTreeObserver observer = view.getViewTreeObserver();</span><br><span class="line">    layoutListener = <span class="keyword">new</span> SizeDeterminerLayoutListener(<span class="keyword">this</span>);</span><br><span class="line">    observer.addOnPreDrawListener(layoutListener);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后再onSizeReady，开始准备资源</p><p>onSizeReady—&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">loadStatus = engine.load(</span><br><span class="line">    glideContext,</span><br><span class="line">    model,</span><br><span class="line">    requestOptions.getSignature(),</span><br><span class="line">    <span class="keyword">this</span>.width,</span><br><span class="line">    <span class="keyword">this</span>.height,</span><br><span class="line">    requestOptions.getResourceClass(),</span><br><span class="line">    transcodeClass,</span><br><span class="line">    priority,</span><br><span class="line">    requestOptions.getDiskCacheStrategy(),</span><br><span class="line">    requestOptions.getTransformations(),</span><br><span class="line">    requestOptions.isTransformationRequired(),</span><br><span class="line">    requestOptions.isScaleOnlyOrNoTransform(),</span><br><span class="line">    requestOptions.getOptions(),</span><br><span class="line">    requestOptions.isMemoryCacheable(),</span><br><span class="line">    requestOptions.getUseUnlimitedSourceGeneratorsPool(),</span><br><span class="line">    requestOptions.getUseAnimationPool(),</span><br><span class="line">    requestOptions.getOnlyRetrieveFromCache(),</span><br><span class="line">    <span class="keyword">this</span>);  <span class="comment">//调用了引擎加载</span></span><br></pre></td></tr></table></figure><p>步入load，从内存缓存中查找 —–&gt;从磁盘缓存中查找 —–&gt;http连接获取数据</p><p>load —&gt;DecodeJob —&gt;run—-&gt;runWrapped—-&gt;runGenerators</p><p>步入runGenerators</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loadData.fetcher.loadData(helper.getPriority(), this);</span><br></pre></td></tr></table></figure><p>这里loadData   &lt;model,data&gt;</p><p>DataFetcher 接口提供了onDataReady的回调函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DataFetcher</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Callback that must be called when data has been loaded and is available, or when the load</span></span><br><span class="line"><span class="comment">   * fails.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &lt;T&gt; The type of data that will be loaded.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="class"><span class="keyword">interface</span> <span class="title">DataCallback</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Called with the loaded data if the load succeeded, or with &#123;<span class="doctag">@code</span> null&#125; if the load failed.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onDataReady</span><span class="params">(@Nullable T data)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Called when the load fails.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e a non-null &#123;<span class="doctag">@link</span> Exception&#125; indicating why the load failed.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onLoadFailed</span><span class="params">(@NonNull Exception e)</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Fetch data from which a resource can be decoded.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt; This will always be called on background thread so it is safe to perform long running tasks</span></span><br><span class="line"><span class="comment">   * here. Any third party libraries called must be thread safe (or move the work to another thread)</span></span><br><span class="line"><span class="comment">   * since this method will be called from a thread in a</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@link</span> java.util.concurrent.ExecutorService&#125;</span></span><br><span class="line"><span class="comment">   * that may have more than one background thread. &lt;/p&gt;</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * You &lt;b&gt;MUST&lt;/b&gt; use the &#123;<span class="doctag">@link</span> DataCallback&#125; once the request is complete.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * You are free to move the fetch work to another thread and call the callback from there.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt; This method will only be called when the corresponding resource is not in the cache. &lt;/p&gt;</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt; Note - this method will be run on a background thread so blocking I/O is safe. &lt;/p&gt;</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> priority The priority with which the request should be completed.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> callback The callback to use when the request is complete</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@see</span> #cleanup() where the data retuned will be cleaned up</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">loadData</span><span class="params">(@NonNull Priority priority, @NonNull DataCallback&lt;? <span class="keyword">super</span> T&gt; callback)</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Cleanup or recycle any resources used by this data fetcher. This method will be called in a</span></span><br><span class="line"><span class="comment">   * finally block after the data provided by &#123;<span class="doctag">@link</span> #loadData(com.bumptech.glide.Priority,</span></span><br><span class="line"><span class="comment">   * com.bumptech.glide.load.data.DataFetcher.DataCallback)&#125; has been decoded by the</span></span><br><span class="line"><span class="comment">   * &#123;<span class="doctag">@link</span> com.bumptech.glide.load.ResourceDecoder&#125;.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt; Note - this method will be run on a background thread so blocking I/O is safe. &lt;/p&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">cleanup</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * A method that will be called when a load is no longer relevant and has been cancelled. This</span></span><br><span class="line"><span class="comment">   * method does not need to guarantee that any in process loads do not finish. It also may be</span></span><br><span class="line"><span class="comment">   * called before a load starts or after it finishes.</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt; The best way to use this method is to cancel any loads that have not yet started, but allow</span></span><br><span class="line"><span class="comment">   * those that are in process to finish since its we typically will want to display the same</span></span><br><span class="line"><span class="comment">   * resource in a different view in the near future. &lt;/p&gt;</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * &lt;p&gt; Note - this method will be run on the main thread so it should not perform blocking</span></span><br><span class="line"><span class="comment">   * operations and should finish quickly. &lt;/p&gt;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">cancel</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Returns the class of the data this fetcher will attempt to obtain.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@NonNull</span></span><br><span class="line">  <span class="function">Class&lt;T&gt; <span class="title">getDataClass</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Returns the &#123;<span class="doctag">@link</span> com.bumptech.glide.load.DataSource&#125; this fetcher will return data from.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@NonNull</span></span><br><span class="line">  <span class="function">DataSource <span class="title">getDataSource</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参见public class VolleyStreamFetcher implements DataFetcher<inputstream> {</inputstream></p><p>其中提供了OKhttp和volley的实现，这里将泛型T转为了InputStream，可见这里获取了数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载数据，构造请求，并将请求加入请求队列，volley肯定有一个线程池不断地从队列中取出信息并执行请求，类似win32的消息机制??????????</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadData</span><span class="params">(@NonNull Priority priority,</span></span></span><br><span class="line"><span class="function"><span class="params">    @NonNull DataCallback&lt;? <span class="keyword">super</span> InputStream&gt; callback)</span> </span>&#123;</span><br><span class="line">  request = requestFactory.create(url.toStringUrl(), callback, glideToVolleyPriority(priority),</span><br><span class="line">      url.getHeaders());</span><br><span class="line">  requestQueue.add(request);</span><br><span class="line">&#125;</span><br><span class="line">但是是怎么将数据从volley层次传回app的，注意这里传入了一个callback</span><br><span class="line">所以在对应volley的函数中会回调callback</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public static class GlideRequest extends Request&lt;byte[]&gt; &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> Response&lt;<span class="keyword">byte</span>[]&gt; parseNetworkResponse(NetworkResponse response) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!isCanceled()) &#123;</span><br><span class="line">    callback.onDataReady(<span class="keyword">new</span> ByteArrayInputStream(response.data));</span><br><span class="line">    <span class="comment">//回调，从volley跳到我们的app了</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> Response.success(response.data, HttpHeaderParser.parseCacheHeaders(response));</span><br><span class="line">&#125;</span><br><span class="line">这里的Request是从那里来的??? 原来是volley包内的Request</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.android.volley;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Request</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Request</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">protected</span> Response&lt;T&gt; <span class="title">parseNetworkResponse</span><span class="params">(NetworkResponse response)</span></span>;</span><br></pre></td></tr></table></figure><p>所以这里实现了从app——-&gt;VolleyStreamFetcher —&gt;vollery—-&gt;callback—&gt;app</p><p>Glide 4.0 还引入了新的属性 apt </p><p>APT(Annotation Processing Tool)是一种处理注释的工具,它对源代码文件进行检测找出其中的Annotation，使用Annotation进行额外的处理。<br>Annotation处理器在处理Annotation时可以根据源文件中的Annotation生成额外的源文件和其它的文件(文件具体内容由Annotation处理器的编写者决定),APT还会编译生成的源文件和原来的源文件，将它们一起生成class文件。</p><p>使用了JavaPoet来动态生成一个类</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;类比RxJava,glide,JavaPoet这些优秀的android流式api真是令人感叹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Glide.with(this)
           .asDrawable()
            .load(&amp;quot;http://i6
      
    
    </summary>
    
      <category term="github开源阅读笔记" scheme="http://yoursite.com/categories/github%E5%BC%80%E6%BA%90%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2018/03/14/test/"/>
    <id>http://yoursite.com/2018/03/14/test/</id>
    <published>2018-03-14T12:27:15.712Z</published>
    <updated>2018-03-14T12:29:20.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Big-tiltle"><a href="#Big-tiltle" class="headerlink" title="Big tiltle"></a>Big tiltle</h1><h2 id="medium-title"><a href="#medium-title" class="headerlink" title="medium title"></a>medium title</h2><h3 id="small-title"><a href="#small-title" class="headerlink" title="small title"></a>small title</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Big-tiltle&quot;&gt;&lt;a href=&quot;#Big-tiltle&quot; class=&quot;headerlink&quot; title=&quot;Big tiltle&quot;&gt;&lt;/a&gt;Big tiltle&lt;/h1&gt;&lt;h2 id=&quot;medium-title&quot;&gt;&lt;a href=&quot;#medium-ti
      
    
    </summary>
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
      <category term="random" scheme="http://yoursite.com/tags/random/"/>
    
      <category term="my" scheme="http://yoursite.com/tags/my/"/>
    
  </entry>
  
</feed>
